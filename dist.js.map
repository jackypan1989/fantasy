{"version":3,"sources":["webpack:///webpack/bootstrap 5d847983fdfa69af915b","webpack:///./index.js","webpack:///./~/hepburn/lib/hepburn.js","webpack:///./~/bulk-replace/bulk-replace.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA;;AAEA,KAAI,UAAU,oBAAQ,CAAR,CAAV;;AAEJ,KAAI,OAAO,SAAP,IAAO,GAAM;OACV,WAAY,OAAO,QAAP,CAAZ,SADU;;AAEf,OAAI,oBAAJ;OAAc,oBAAd,CAFe;;AAIf,OAAI,SAAS,OAAT,CAAiB,OAAjB,IAA4B,CAAC,CAAD,EAAI;AAClC,gBAAW,4CAAX,CADkC;AAElC,gBAAW,gCAAX,CAFkC;IAApC,MAGO;AACL,gBAAW,6CAAX,CADK;AAEL,gBAAW,+BAAX,CAFK;IAHP;;AAQA,OAAI,SAAS,SACV,aADU,CACI,QADJ,EAEV,aAFU,CAGV,QAHU,CAZE;;AAiBf,OAAI,SAAS,OACV,gBADU,CACO,QADP,CAAT,CAjBW;;AAoBf,QAAK,IAAI,IAAI,CAAJ,EAAO,IAAE,OAAO,MAAP,EAAe,GAAjC,EAAsC;AACpC,SAAI,OAAO,OAAO,CAAP,EAAU,WAAV,CAAsB,IAAtB,EAAP,CADgC;AAEpC,SAAI,WAAW,QAAQ,UAAR,CAAmB,IAAnB,CAAX,CAFgC;AAGpC,aAAQ,GAAR,CAAY,IAAZ,EAAkB,QAAlB,EAA4B,eAAe,IAAf,CAAoB,QAApB,CAA5B,EAHoC;AAIpC,SAAI,eAAe,IAAf,CAAoB,QAApB,CAAJ,EAAmC;AACjC,cAAO,CAAP,EAAU,SAAV,GAAsB,QAAtB,CADiC;MAAnC;IAJF;EApBS;;AA8BX,YAAW;UAAI;EAAJ,EAAY,KAAvB;;;AAGA,UAAS,gBAAT,CAA0B,QAA1B,EAAoC;UAAK;EAAL,CAApC,C;;;;;;ACrCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL","file":"dist.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5d847983fdfa69af915b\n **/","'use stricts';\n\nlet hepburn = require('hepburn');\n\nlet init = () => {\n  let {pathname} = window.location;\n  let iframeQS, tracksQS;\n\n  if (pathname.indexOf('album') > -1) {\n    iframeQS = \"iframe[id^='browse-app-spotify:app:album']\";\n    tracksQS = '#album-tracks div.tl-highlight';\n  } else {\n    iframeQS = \"iframe[id^='browse-app-spotify:app:artist']\";\n    tracksQS = '#toplist-row div.tl-highlight';\n  }\n\n  let iframe = document\n    .querySelector(iframeQS)\n    .contentWindow\n    .document;\n\n  let tracks = iframe\n    .querySelectorAll(tracksQS);\n\n  for (let i = 0; i<tracks.length; i++) {\n    let name = tracks[i].textContent.trim();\n    let hiragana = hepburn.toHiragana(name);\n    console.log(name, hiragana, /^[^a-zA-Z]+$/.test(hiragana));\n    if (/^[^a-zA-Z]+$/.test(hiragana)) {\n      tracks[i].innerHTML = hiragana;\n    }\n  }\n};\n\nsetTimeout(()=>init(), 10000);\n\n// handle scroll\ndocument.addEventListener('scroll', ()=> init());\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","/*jslint node: true */\n'use strict';\n\nvar bulkReplace = require(\"bulk-replace\");\n\nvar hiraganaMonographs = {\n  \"あ\": \"A\", \"い\": \"I\", \"う\": \"U\", \"え\": \"E\", \"お\": \"O\",\n  \"か\": \"KA\", \"き\": \"KI\", \"く\": \"KU\", \"け\": \"KE\", \"こ\": \"KO\",\n  \"さ\": \"SA\", \"し\": \"SHI\", \"す\": \"SU\", \"せ\": \"SE\", \"そ\": \"SO\",\n  \"た\": \"TA\", \"ち\": \"CHI\", \"つ\": \"TSU\", \"て\": \"TE\", \"と\": \"TO\",\n  \"な\": \"NA\", \"に\": \"NI\", \"ぬ\": \"NU\", \"ね\": \"NE\", \"の\": \"NO\",\n  \"は\": \"HA\", \"ひ\": \"HI\", \"ふ\": \"FU\", \"へ\": \"HE\", \"ほ\": \"HO\",\n  \"ま\": \"MA\", \"み\": \"MI\", \"む\": \"MU\", \"め\": \"ME\", \"も\": \"MO\",\n  \"や\": \"YA\", \"ゆ\": \"YU\", \"よ\": \"YO\",\n  \"ら\": \"RA\", \"り\": \"RI\", \"る\": \"RU\", \"れ\": \"RE\", \"ろ\": \"RO\",\n  \"わ\": \"WA\", \"ゐ\": \"WI\", \"ゑ\": \"WE\", \"を\": \"WO\", \"ん\": \"N'\",\n  \"が\": \"GA\", \"ぎ\": \"GI\", \"ぐ\": \"GU\", \"げ\": \"GE\", \"ご\": \"GO\",\n  \"ざ\": \"ZA\", \"じ\": \"JI\", \"ず\": \"ZU\", \"ぜ\": \"ZE\", \"ぞ\": \"ZO\",\n  \"だ\": \"DA\", \"ぢ\": \"DJI\", \"づ\": \"DZU\", \"で\": \"DE\", \"ど\": \"DO\",\n  \"ば\": \"BA\", \"び\": \"BI\", \"ぶ\": \"BU\", \"べ\": \"BE\", \"ぼ\": \"BO\",\n  \"ぱ\": \"PA\", \"ぴ\": \"PI\", \"ぷ\": \"PU\", \"ぺ\": \"PE\", \"ぽ\": \"PO\"\n};\n\nvar hiraganaDigraphs = {\n  \"きゃ\": \"KYA\", \"きゅ\": \"KYU\", \"きょ\": \"KYO\",\n  \"しゃ\": \"SHA\", \"しゅ\": \"SHU\", \"しょ\": \"SHO\",\n  \"ちゃ\": \"CHA\", \"ちゅ\": \"CHU\", \"ちょ\": \"CHO\",\n  \"にゃ\": \"NYA\", \"にゅ\": \"NYU\", \"にょ\": \"NYO\",\n  \"ひゃ\": \"HYA\", \"ひゅ\": \"HYU\", \"ひょ\": \"HYO\",\n  \"みゃ\": \"MYA\", \"みゅ\": \"MYU\", \"みょ\": \"MYO\",\n  \"りゃ\": \"RYA\", \"りゅ\": \"RYU\", \"りょ\": \"RYO\",\n  \"ぎゃ\": \"GYA\", \"ぎゅ\": \"GYU\", \"ぎょ\": \"GYO\",\n  \"じゃ\": \"JA\", \"じゅ\": \"JU\", \"じょ\": \"JO\",\n  \"びゃ\": \"BYA\", \"びゅ\": \"BYU\", \"びょ\": \"BYO\",\n  \"ぴゃ\": \"PYA\", \"ぴゅ\": \"PYU\", \"ぴょ\": \"PYO\"\n};\n\nvar katakanaMonographs = {\n  \"ア\": \"A\", \"イ\": \"I\", \"ウ\": \"U\", \"エ\": \"E\", \"オ\": \"O\",\n  \"カ\": \"KA\", \"キ\": \"KI\", \"ク\": \"KU\", \"ケ\": \"KE\", \"コ\": \"KO\",\n  \"サ\": \"SA\", \"シ\": \"SHI\", \"ス\": \"SU\", \"セ\": \"SE\", \"ソ\": \"SO\",\n  \"タ\": \"TA\", \"チ\": \"CHI\", \"ツ\": \"TSU\", \"テ\": \"TE\", \"ト\": \"TO\",\n  \"ナ\": \"NA\", \"ニ\": \"NI\", \"ヌ\": \"NU\", \"ネ\": \"NE\", \"ノ\": \"NO\",\n  \"ハ\": \"HA\", \"ヒ\": \"HI\", \"フ\": \"FU\", \"ヘ\": \"HE\", \"ホ\": \"HO\",\n  \"マ\": \"MA\", \"ミ\": \"MI\", \"ム\": \"MU\", \"メ\": \"ME\", \"モ\": \"MO\",\n  \"ヤ\": \"YA\", \"ユ\": \"YU\", \"ヨ\": \"YO\",\n  \"ラ\": \"RA\", \"リ\": \"RI\", \"ル\": \"RU\", \"レ\": \"RE\", \"ロ\": \"RO\",\n  \"ワ\": \"WA\", \"ヰ\": \"WI\", \"ヱ\": \"WE\",  \"ヲ\": \"WO\", \"ン\": \"N\",\n  \"ガ\": \"GA\", \"ギ\": \"GI\", \"グ\": \"GU\", \"ゲ\": \"GE\", \"ゴ\": \"GO\",\n  \"ザ\": \"ZA\", \"ジ\": \"JI\", \"ズ\": \"ZU\", \"ゼ\": \"ZE\", \"ゾ\": \"ZO\",\n  \"ダ\": \"DA\", \"ヂ\": \"DJI\", \"ヅ\": \"DZU\", \"デ\": \"DE\", \"ド\": \"DO\",\n  \"バ\": \"BA\", \"ビ\": \"BI\", \"ブ\": \"BU\", \"ベ\": \"BE\", \"ボ\": \"BO\",\n  \"パ\": \"PA\", \"ピ\": \"PI\", \"プ\": \"PU\", \"ペ\": \"PE\", \"ポ\": \"PO\"\n};\n\nvar katakanaDigraphs = {\n  \"アー\": \"Ā\", \"イー\": \"Ī\", \"ウー\": \"Ū\", \"エー\": \"Ē\", \"オー\": \"Ō\",\n  \"カー\": \"KĀ\", \"キー\": \"KĪ\", \"クー\": \"KŪ\", \"ケー\": \"KĒ\", \"コー\": \"KŌ\",\n  \"サー\": \"SĀ\", \"シー\": \"SHĪ\", \"スー\": \"SŪ\", \"セー\": \"SĒ\", \"ソー\": \"SŌ\",\n  \"ター\": \"TĀ\", \"チー\": \"CHĪ\", \"ツー\": \"TSŪ\", \"テー\": \"TĒ\", \"トー\": \"TŌ\",\n  \"ナー\": \"NĀ\", \"ニー\": \"NĪ\", \"ヌー\": \"NŪ\", \"ネー\": \"NĒ\", \"ノー\": \"NŌ\",\n  \"ハー\": \"HĀ\", \"ヒー\": \"HĪ\", \"フー\": \"FŪ\", \"ヘー\": \"HĒ\", \"ホー\": \"HŌ\",\n  \"マー\": \"MĀ\", \"ミー\": \"MĪ\", \"ムー\": \"MŪ\", \"メー\": \"MĒ\", \"モー\": \"MŌ\",\n  \"ヤー\": \"YĀ\", \"ユー\": \"YŪ\", \"ヨー\": \"YŌ\",\n  \"ラー\": \"RĀ\", \"リー\": \"RĪ\", \"ルー\": \"RŪ\", \"レー\": \"RĒ\", \"ロー\": \"RŌ\",\n  \"ワー\": \"WĀ\", \"ヰー\": \"WĪ\", \"ヱー\": \"WĒ\",  \"ヲー\": \"WŌ\", \"ンー\": \"N\",\n  \"ガー\": \"GĀ\", \"ギー\": \"GĪ\", \"グー\": \"GŪ\", \"ゲー\": \"GĒ\", \"ゴー\": \"GŌ\",\n  \"ザー\": \"ZĀ\", \"ジー\": \"JĪ\", \"ズー\": \"ZŪ\", \"ゼー\": \"ZĒ\", \"ゾー\": \"ZŌ\",\n  \"ダー\": \"DĀ\", \"ヂー\": \"DJĪ\", \"ヅー\": \"DZŪ\", \"デー\": \"DĒ\", \"ドー\": \"DŌ\",\n  \"バー\": \"BĀ\", \"ビー\": \"BĪ\", \"ブー\": \"BŪ\", \"ベー\": \"BĒ\", \"ボー\": \"BŌ\",\n  \"パー\": \"PĀ\", \"ピー\": \"PĪ\", \"プー\": \"PŪ\", \"ペー\": \"PĒ\", \"ポー\": \"PŌ\",\n  \"キャ\": \"KYA\", \"キュ\": \"KYU\", \"キョ\": \"KYO\",\n  \"シャ\": \"SHA\", \"シュ\": \"SHU\", \"ショ\": \"SHO\",\n  \"チャ\": \"CHA\", \"チュ\": \"CHU\", \"チョ\": \"CHO\",\n  \"ニャ\": \"NYA\", \"ニュ\": \"NYU\", \"ニョ\": \"NYO\",\n  \"ヒャ\": \"HYA\", \"ヒュ\": \"HYU\", \"ヒョ\": \"HYO\",\n  \"ミャ\": \"MYA\", \"ミュ\": \"MYU\", \"ミョ\": \"MYO\",\n  \"リャ\": \"RYA\", \"リュ\": \"RYU\", \"リョ\": \"RYO\",\n  \"ギャ\": \"GYA\", \"ギュ\": \"GYU\", \"ギョ\": \"GYO\",\n  \"ジャ\": \"JA\", \"ジュ\": \"JU\", \"ジョ\": \"JO\",\n  \"ビャ\": \"BYA\", \"ビュ\": \"BYU\", \"ビョ\": \"BYO\",\n  \"ピャ\": \"PYA\", \"ピュ\": \"PYU\", \"ピョ\": \"PYO\"\n};\n\nvar katakanaTrigraphs = {\n  \"キャー\": \"KYĀ\", \"キュー\": \"KYŪ\", \"キョー\": \"KYŌ\",\n  \"シャー\": \"SHĀ\", \"シュー\": \"SHŪ\", \"ショー\": \"SHŌ\",\n  \"チャー\": \"CHĀ\", \"チュー\": \"CHŪ\", \"チョー\": \"CHŌ\",\n  \"ニャー\": \"NYĀ\", \"ニュー\": \"NYŪ\", \"ニョー\": \"NYŌ\",\n  \"ヒャー\": \"HYĀ\", \"ヒュー\": \"HYŪ\", \"ヒョー\": \"HYŌ\",\n  \"ミャー\": \"MYĀ\", \"ミュー\": \"MYŪ\", \"ミョー\": \"MYŌ\",\n  \"リャー\": \"RYĀ\", \"リュー\": \"RYŪ\", \"リョー\": \"RYŌ\",\n  \"ギャー\": \"GYĀ\", \"ギュー\": \"GYŪ\", \"ギョー\": \"GYŌ\",\n  \"ジャー\": \"JĀ\", \"ジュー\": \"JŪ\", \"ジョー\": \"JŌ\",\n  \"ビャー\": \"BYĀ\", \"ビュー\": \"BYŪ\", \"ビョー\": \"BYŌ\",\n  \"ピャー\": \"PYĀ\", \"ピュー\": \"PYŪ\", \"ピョー\": \"PYŌ\"\n};\n\n// Used to convert old Nihon-Shiki style romaji into the modern Hepburn form.\n// Source: http://nayuki.eigenstate.org/page/variations-on-japanese-romanization\nvar nihonShiki = {\n    \"SI\": \"SHI\",\n    \"ZI\": \"JI\",\n    \"TI\": \"CHI\",\n    \"DI\": \"JI\",\n    \"TU\": \"TSU\",\n    \"DU\": \"ZU\",\n    \"SHU\": \"SHU\", // Prevent HU from accidentally converting\n    \"CHU\": \"CHU\",\n    \"HU\": \"FU\",\n    \"CYA\": \"CHA\",\n    \"CYO\": \"CHO\",\n    \"CYU\": \"CHU\",\n    \"SYA\": \"SHA\",\n    \"SYU\": \"SHU\",\n    \"SYO\": \"SHO\",\n    \"ZYA\": \"JA\",\n    \"ZYU\": \"JU\",\n    \"ZYO\": \"JO\",\n    \"TYA\": \"CHA\",\n    \"TYU\": \"CHU\",\n    \"TYO\": \"CHO\",\n    \"DYA\": \"JA\",\n    \"DYU\": \"JU\",\n    \"DYO\": \"JO\"\n};\n\n// For use with toHiragana\nvar hiraganaMap = {};\n\nObject.keys(hiraganaMonographs).forEach(function(key) {\n  var value = hiraganaMonographs[key];\n  if (!(value in hiraganaMap)) {\n    hiraganaMap[value] = key;\n  }\n});\n\nObject.keys(hiraganaDigraphs).forEach(function(key) {\n  var value = hiraganaDigraphs[key];\n  if (!(value in hiraganaMap)) {\n    hiraganaMap[value] = key;\n  }\n});\n\nvar hiraganaRegex = new RegExp(Object.keys(hiraganaMap).sort(function(a, b) {\n  return b.length - a.length;\n}).join(\"|\"), \"g\");\n\n// For use with toKatakana\nvar katakanaMap = {};\n\nObject.keys(katakanaMonographs).forEach(function(key) {\n  var value = katakanaMonographs[key];\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\n\nObject.keys(katakanaDigraphs).forEach(function(key) {\n  var value = katakanaDigraphs[key];\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\n\nObject.keys(katakanaTrigraphs).forEach(function(key) {\n  var value = katakanaTrigraphs[key];\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\n\nvar katakanaRegex = new RegExp(Object.keys(katakanaMap).sort(function(a, b) {\n  return b.length - a.length;\n}).join(\"|\"), \"g\");\n\n// API\n\nexports.fromKana = function(str) {\n  // Initial transliteration\n  str = bulkReplace(str, hiraganaDigraphs);\n  str = bulkReplace(str, katakanaDigraphs);\n  str = bulkReplace(str, hiraganaMonographs);\n  str = bulkReplace(str, katakanaMonographs);\n\n  // Correct use of sokuon\n  str = str.replace(/っC/g, \"TC\").replace(/っ(.)/g, \"$1$1\");\n  str = str.replace(/ッC/g, \"TC\").replace(/ッ(.)/g, \"$1$1\");\n\n  // Correct usage of N' (M' is a common mistake)\n  str = str.replace(/[NM]'([^YAEIOU]|$)/g, \"N$1\");\n\n  // Correct use of choonpu\n  str = str.replace(/Aー/g, \"Ā\");\n  str = str.replace(/Iー/g, \"Ī\");\n  str = str.replace(/Uー/g, \"Ū\");\n  str = str.replace(/Eー/g, \"Ē\");\n  str = str.replace(/Oー/g, \"Ō\");\n\n  return str;\n};\n\nexports.toHiragana = function(str) {\n  // All conversion is done in upper-case\n  str = str.toUpperCase();\n\n  // Correct use of sokuon\n  str = str.replace(/TC/g, \"っC\");\n  str = str.replace(/([^AEIOUN])\\1/g, \"っ$1\");\n\n  // Transliteration\n  str = bulkReplace(str, hiraganaRegex, hiraganaMap);\n\n  // Fix any remaining N/M usage (that isn't a N' usage)\n  str = str.replace(/N|M/g, \"ん\");\n\n  return str;\n};\n\nexports.toKatakana = function(str) {\n  // All conversion is done in upper-case\n  str = str.toUpperCase();\n\n  // Correct use of sokuon\n  str = str.replace(/TC/g, \"ッC\");\n  str = str.replace(/([^AEIOUN])\\1/g, \"ッ$1\");\n\n  // Transliteration\n  str = bulkReplace(str, katakanaRegex, katakanaMap);\n\n  // Fix any remaining N/M usage (that isn't a N' usage)\n  str = str.replace(/N|M/g, \"ン\");\n\n  return str;\n};\n\nexports.cleanRomaji = function(str) {\n  // Follows many of the suggestions from:\n  // http://nayuki.eigenstate.org/page/variations-on-japanese-romanization\n\n  // All conversion is done in upper-case\n  str = str.toUpperCase();\n\n  // Should be using N instead of M\n  str = str.replace(/(\\w)M([^AEIOUY]|$)/g, \"$1N$2\");\n\n  // Convert the NN form into the more common N'\n  str = str.replace(/NN/g, \"N'\");\n\n  // Convert usage of OU into the more common OO\n  // Handle cases like Toukyou\n  str = str.replace(/OU/g, \"OO\");\n\n  // Fix antiquated usage of OH to mean OO\n  // (handle ambiguous cases like 'Kohusai' vs. 'Tohkyoh')\n  str = str.replace(/OH([^AIEO]|$)/g, \"OO$1\");\n\n  // Replace old Nihon-shiki usage with modern Hepburn form\n  str = bulkReplace(str, nihonShiki);\n\n  return str;\n};\n\nexports.containsHiragana = function(str) {\n  return new RegExp(Object.keys(hiraganaMonographs).join('|')).test(str);\n};\n\nexports.containsKatakana = function(str) {\n  return new RegExp(Object.keys(katakanaMonographs).join('|')).test(str);\n};\n\nexports.containsKana = function(str){\n  return (exports.containsHiragana(str) || exports.containsKatakana(str));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hepburn/lib/hepburn.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = function(str, regex, map) {\n    if (arguments.length === 2) {\n        map = regex;\n        regex = new RegExp(Object.keys(map).join(\"|\"), \"ig\");\n    }\n\n    return str.replace(regex, function(all) {\n        if (all in map) {\n            return map[all];\n        }\n\n        return all;\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bulk-replace/bulk-replace.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}